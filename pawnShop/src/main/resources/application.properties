# Application Properties
spring.application.name=pawnShop
spring.flyway.baseline-on-migrate=true

# Database configuration
spring.datasource.url=${dotenv['SPRING_DATASOURCE_URL']}
spring.datasource.username=${dotenv['SPRING_DATASOURCE_USERNAME']}
spring.datasource.password=${dotenv['SPRING_DATASOURCE_PASSWORD']}
spring.datasource.driver-class-name=${dotenv['SPRING_DATASOURCE_DRIVER_CLASS_NAME']}

# Hibernate JPA configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Server configuration
server.port=8080

# Stripe configuration
stripe.api.key=${dotenv['STRIPE_API_KEY']}
stripe.public.key=${dotenv['STRIPE_PUBLIC_KEY']}
stripe.webhook.secret=${dotenv['STRIPE_WEBHOOK_SECRET']}

# Frontend URL
frontend.url=${dotenv['FRONTEND_URL']}

# Email Configuration
spring.mail.host=${dotenv['SPRING_MAIL_HOST']}
spring.mail.port=${dotenv['SPRING_MAIL_PORT']}
spring.mail.username=${dotenv['SPRING_MAIL_USERNAME']}
spring.mail.password=${dotenv['SPRING_MAIL_PASSWORD']}
spring.mail.properties.mail.smtp.auth=${dotenv['SPRING_MAIL_SMTP_AUTH']}
spring.mail.properties.mail.smtp.starttls.enable=${dotenv['SPRING_MAIL_STARTTLS_ENABLE']}
spring.mail.properties.mail.smtp.ssl.trust=${dotenv['SPRING_MAIL_SSL_TRUST']}
spring.mail.properties.mail.smtp.ssl.protocols=${dotenv['SPRING_MAIL_SSL_PROTOCOLS']}
spring.mail.properties.mail.smtp.connectiontimeout=${dotenv['SPRING_MAIL_CONNECTION_TIMEOUT']}
spring.mail.properties.mail.smtp.timeout=${dotenv['SPRING_MAIL_TIMEOUT']}
spring.mail.properties.mail.smtp.writetimeout=${dotenv['SPRING_MAIL_WRITE_TIMEOUT']}

# JWT Configuration
jwt.email-verification.expiration=${dotenv['JWT_EMAIL_VERIFICATION_EXPIRATION']}
jwt.email-verification.secret=${dotenv['JWT_EMAIL_VERIFICATION_SECRET']}

# Frontend URLs
frontend.email-verification.url=${dotenv['FRONTEND_EMAIL_VERIFICATION_URL']}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${dotenv['GOOGLE_CLIENT_ID']}
spring.security.oauth2.client.registration.google.client-secret=${dotenv['GOOGLE_CLIENT_SECRET']}
spring.security.oauth2.client.registration.google.scope=${dotenv['GOOGLE_SCOPE']}
spring.security.oauth2.client.registration.google.redirect-uri=${dotenv['GOOGLE_REDIRECT_URI']}

# CORS Configuration
spring.mvc.cors.allowed-origins=${dotenv['FRONTEND_URL']}
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# Error handling
server.error.include-message=always
server.error.include-binding-errors=always

# Logging for debugging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
